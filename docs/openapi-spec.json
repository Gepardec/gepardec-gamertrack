{
  "openapi" : "3.0.1",
  "paths" : {
    "/gameoutcomes" : {
      "get" : {
        "summary" : "Gets all existing gameoutcomes from the database, or all Gameoutcomes filtered either by gameID or userID",
        "operationId" : "getGameOutcomes",
        "parameters" : [ {
          "name" : "gameId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "userId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          }
        }
      },
      "post" : {
        "summary" : "Creates a gameoutcome",
        "description" : "Gameoutcome must be valid",
        "operationId" : "createGameOutcome",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateGameOutcomeCommand"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameRestDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Could not create gameoutcome/Entity was not valid"
          }
        }
      }
    },
    "/gameoutcomes/{id}" : {
      "get" : {
        "summary" : "Gets gameoutcome by ID",
        "description" : "Gameoutcome must exist",
        "operationId" : "getGameOutcomeById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameRestDto"
                }
              }
            }
          },
          "204" : {
            "description" : "Gameoutcome not found"
          }
        }
      },
      "put" : {
        "summary" : "Updates a gameoutcome",
        "description" : "Gameoutcome must be valid and exist, specified user and game ids that make up the gameoutcome have to exist",
        "operationId" : "updateGameOutcome",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateGameOutcomeCommand"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Gameoutcome has been updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameRestDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          }
        }
      },
      "delete" : {
        "summary" : "Deletes a gameoutcome",
        "description" : "Gameoutcome must exist",
        "operationId" : "deleteGameOutcome",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Gameoutcome has been deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameRestDto"
                }
              }
            }
          },
          "404" : {
            "description" : "Gameoutcome not found"
          }
        }
      }
    },
    "/games" : {
      "get" : {
        "summary" : "Gets all existing games from the database",
        "operationId" : "getGames",
        "responses" : {
          "200" : {
            "description" : "Ok"
          }
        }
      },
      "post" : {
        "summary" : "Create a game",
        "description" : "Game Objekt must be Valid",
        "operationId" : "createGame",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateGameCommand"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Game successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameRestDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Could not create Game"
          }
        }
      }
    },
    "/games/{id}" : {
      "get" : {
        "summary" : "Gets game by ID",
        "description" : "Game must exist",
        "operationId" : "getGame",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameRestDto"
                }
              }
            }
          },
          "404" : {
            "description" : "Game not found"
          }
        }
      },
      "put" : {
        "summary" : "Update a game by ID",
        "description" : "Game has to exist already",
        "operationId" : "updateGame",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateGameCommand"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Game has been updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameRestDto"
                }
              }
            }
          },
          "404" : {
            "description" : "Game not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameRestDto"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a game by ID ",
        "description" : "Game has to exist",
        "operationId" : "deleteGame",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Game has been deleted successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameRestDto"
                }
              }
            }
          },
          "404" : {
            "description" : "Game not found"
          }
        }
      }
    },
    "/scores" : {
      "get" : {
        "summary" : "Get all Scores (optional: MinMax ScorePoints)",
        "description" : "Returns list of scores",
        "operationId" : "getScores",
        "parameters" : [ {
          "name" : "min",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0
          }
        }, {
          "name" : "max",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "204" : {
            "description" : "No Content - No scores were found"
          }
        }
      },
      "post" : {
        "summary" : "Post a score",
        "description" : "Returns the created score",
        "operationId" : "createScore",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateScoreCommand"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "404" : {
            "description" : "Not Created - The score was not created"
          }
        }
      }
    },
    "/scores/game/{id}" : {
      "get" : {
        "summary" : "Get Scores by gameId",
        "description" : "Returns list of scores",
        "operationId" : "getScoreByGame",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "204" : {
            "description" : "No Content - No scores were found"
          }
        }
      }
    },
    "/scores/{id}" : {
      "get" : {
        "summary" : "Get Scores by id",
        "description" : "Returns list of scores",
        "operationId" : "getScoreById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "204" : {
            "description" : "No Content - No scores were found"
          }
        }
      }
    },
    "/scores/scorepoints/{points}" : {
      "get" : {
        "summary" : "Get Scores by Scorepoints",
        "description" : "Returns list of scores",
        "operationId" : "getScoreByScorePoints",
        "parameters" : [ {
          "name" : "points",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "204" : {
            "description" : "No Content - No scores were found"
          }
        }
      }
    },
    "/scores/user/{id}" : {
      "get" : {
        "summary" : "Get Scores by userId",
        "description" : "Returns list of scores",
        "operationId" : "getScoreByUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "204" : {
            "description" : "No Content - No scores were found"
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "summary" : "Get all users",
        "description" : "Returns a list of users",
        "operationId" : "getUsers",
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "204" : {
            "description" : "No Content - No users were found"
          }
        }
      },
      "post" : {
        "summary" : "Post a user",
        "description" : "Returns the created user",
        "operationId" : "createUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateUserCommand"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "404" : {
            "description" : "Not Created - The user was not created"
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "summary" : "Get User by id",
        "description" : "Returns user by id",
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "204" : {
            "description" : "No Content - The user was not found"
          }
        }
      },
      "put" : {
        "summary" : "Updated user by id",
        "description" : "Returns the updated user",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateUserCommand"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "404" : {
            "description" : "Not Found - The user was not found"
          }
        }
      },
      "delete" : {
        "summary" : "Delete User by id",
        "description" : "Returns the deleted user",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "404" : {
            "description" : "Not Found - The user was not found"
          }
        }
      }
    },
    "/users/includeDeleted" : {
      "get" : {
        "summary" : "Get all users including the deleted User",
        "description" : "Returns a list of users including deleted users",
        "operationId" : "getUsersIncludeDeleted",
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved"
          },
          "204" : {
            "description" : "No Content - No users were found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CreateGameOutcomeCommand" : {
        "type" : "object",
        "properties" : {
          "gameId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "GameRestDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "rules" : {
            "type" : "string"
          }
        }
      },
      "UpdateGameOutcomeCommand" : {
        "type" : "object",
        "properties" : {
          "gameId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "CreateGameCommand" : {
        "required" : [ "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "rules" : {
            "type" : "string"
          }
        }
      },
      "UpdateGameCommand" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "rules" : {
            "type" : "string"
          }
        }
      },
      "CreateScoreCommand" : {
        "required" : [ "gameId", "scorePoints", "userId" ],
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "gameId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scorePoints" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "CreateUserCommand" : {
        "required" : [ "firstname" ],
        "type" : "object",
        "properties" : {
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          }
        }
      },
      "UpdateUserCommand" : {
        "required" : [ "firstname" ],
        "type" : "object",
        "properties" : {
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          }
        }
      }
    }
  }
}