openapi: 3.0.1
paths:
  /gameoutcomes:
    get:
      operationId: getGameOutcomes
      parameters:
      - name: gameId
        in: query
        schema:
          type: integer
          format: int64
      - name: userId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
    post:
      operationId: createGameOutcome
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGameOutcomeCommand'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /gameoutcomes/{id}:
    get:
      operationId: getGameOutcomeById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
    put:
      operationId: updateGameOutcome
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGameOutcomeCommand'
      responses:
        default:
          description: default response
          content:
            application/json: {}
    delete:
      operationId: deleteGameOutcome
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /games:
    get:
      operationId: getGames
      responses:
        default:
          description: default response
          content:
            application/json: {}
    post:
      operationId: createGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGameCommand'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /games/{id}:
    get:
      operationId: getGame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
    put:
      operationId: updateGame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGameCommand'
      responses:
        default:
          description: default response
          content:
            application/json: {}
    delete:
      operationId: deleteGame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /scores:
    get:
      summary: "Get all Scores (optional: MinMax ScorePoints)"
      description: Returns list of scores
      operationId: getScores
      parameters:
      - name: min
        in: query
        schema:
          type: number
          format: double
          default: 0
      - name: max
        in: query
        schema:
          type: number
          format: double
          default: 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      responses:
        "200":
          description: Successfully retrieved
    post:
      summary: Post a score
      description: Returns the created score
      operationId: createScore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScoreCommand'
      responses:
        "200":
          description: Successfully retrieved
        "404":
          description: Not Created - The score was not created
  /scores/game/{id}:
    get:
      summary: Get Scores by gameId
      description: Returns list of scores
      operationId: getScoreByGame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successfully retrieved
  /scores/{id}:
    get:
      summary: Get Scores by id
      description: Returns list of scores
      operationId: getScoreById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successfully retrieved
  /scores/scorepoints/{points}:
    get:
      summary: Get Scores by Scorepoints
      description: Returns list of scores
      operationId: getScoreByScorePoints
      parameters:
      - name: points
        in: path
        required: true
        schema:
          type: number
          format: double
      responses:
        "200":
          description: Successfully retrieved
  /scores/user/{id}:
    get:
      summary: Get Scores by userId
      description: Returns list of scores
      operationId: getScoreByUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successfully retrieved
  /users:
    get:
      summary: Get all users
      description: Returns a list of users
      operationId: getUsers
      responses:
        "200":
          description: Successfully retrieved
    post:
      summary: Post a user
      description: Returns the created user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
      responses:
        "200":
          description: Successfully retrieved
        "404":
          description: Not Created - The user was not created
  /users/{id}:
    get:
      summary: Get User by id
      description: Returns user by id
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successfully retrieved
        "404":
          description: Not Found - The user was not found
    put:
      summary: Updated user by id
      description: Returns the updated user
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserCommand'
      responses:
        "200":
          description: Successfully retrieved
        "404":
          description: Not Found - The user was not found
    delete:
      summary: Delete User by id
      description: Returns the deleted user
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successfully retrieved
        "404":
          description: Not Found - The user was not found
  /users/includeDeleted:
    get:
      summary: Get all users including the deleted User
      description: Returns a list of users including deleted users
      operationId: getUsersIncludeDeleted
      responses:
        "200":
          description: Successfully retrieved
components:
  schemas:
    CreateGameOutcomeCommand:
      type: object
      properties:
        gameId:
          type: integer
          format: int64
        userIds:
          type: array
          items:
            type: integer
            format: int64
    UpdateGameOutcomeCommand:
      type: object
      properties:
        gameOutcomeId:
          type: integer
          format: int64
        gameId:
          type: integer
          format: int64
        userIds:
          type: array
          items:
            type: integer
            format: int64
    CreateGameCommand:
      required:
      - title
      type: object
      properties:
        title:
          type: string
        rules:
          type: string
    UpdateGameCommand:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        rules:
          type: string
    CreateScoreCommand:
      required:
      - gameId
      - scorePoints
      - userId
      type: object
      properties:
        userId:
          type: integer
          format: int64
        gameId:
          type: integer
          format: int64
        scorePoints:
          type: number
          format: double
    CreateUserCommand:
      required:
      - firstname
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
    UpdateUserCommand:
      required:
      - firstname
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
